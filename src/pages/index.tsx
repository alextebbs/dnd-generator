import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { useState } from "react";
import { INPC } from "~/utils/NPC";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const [loadingState, setLoadingState] = useState("idle");
  const [npc, setNPC] = useState<INPC>({});

  const handleFormSubmit = async (e) => {
    e.preventDefault();

    let url = "/api/generate/npc";

    if (e.target.elements.prompt.value != "") {
      const params = { prompt: e.target.elements.prompt.value };
      url += "?" + new URLSearchParams(params).toString();
    }

    setLoadingState("loading");
    const response = await fetch(url);
    const data = (await response.json()) as INPC;
    setLoadingState("done");

    setNPC(data);
  };

  return (
    <>
      <Head>
        <title>NPC Generator</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">
        <div className="">
          <form onSubmit={handleFormSubmit}>
            <input className="text-black" name="prompt" />
            <button type="submit">Generate</button>
          </form>

          {loadingState == "idle" && (
            <div>Fill out the form and generate an NPC</div>
          )}
          {loadingState == "loading" && <div>Loading...</div>}
          {loadingState == "done" && (
            <>
              <div>{npc.physicalDescription}</div>
              <div>{npc.backstory}</div>
            </>
          )}
        </div>
      </main>
    </>
  );
};

export default Home;
